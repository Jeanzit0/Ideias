const prompt = require('prompt-sync')();
const mysql = require('mysql2');

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '061165Jean2003.',
  database: 'controledegastos'
});

let saldoAtual = 0;
let credDebDinTxt = '';
let saldoPosCompra = 0;
let saldoCredito = 0;
let valorTotalNota = [];

console.log('----------------------\n|| Próximo destino? ||\n----------------------');
console.log('<(1) BANCO (1)>');
let escolhaMenu = Number(prompt('<(0) O VAZIO (0)>'));
  
if (escolhaMenu == 1) {
  console.log('(: D) --> (Bem vindo ao banco, no que posso te ajudar?)\n');
  console.log('<(1) Registrar/conferir saldo atual (1)>');
  console.log('<(2) Registrar nova compra (2)>')

  let escolhaMenuBanco = Number(prompt('<(0) Isso foi um erro! (0)>'));

  if (escolhaMenuBanco == 1) {
    let respSaldoNovo = Number(prompt('Qual quantia? '));

    // Recupera o saldo atual do banco de dados
    connection.query('SELECT saldoAtual FROM controledesalario', (err, results) => {
      if (err) {
        console.error('Erro ao recuperar o saldo atual:', err);
        return;
      }
    
      saldoAtual = results[0]?.saldoAtual || 0;
    
      saldoAtual += respSaldoNovo;
    
      connection.query('UPDATE controledesalario SET saldoCredito = ? WHERE id = 1 ', [saldoCredito], (err) => {
        if (err) {
          console.error('Erro ao atualizar o saldo no banco de dados:', err);
        } else {
          console.log('Saldo atualizado com sucesso!');
        }

      console.log(`\nSeu saldo de débito atual é de: ${saldoAtual}\n`);
      console.log(`Seu saldo em cŕedito atual é de: ${saldoCredito}`)
    let credRenov = Number (prompt('Seu crédito renovou/aumentou/diminuiu? (1 - sim, aumentou) (2 - sim, renovou) (3 - sim, diminuiu) (4 - não)'))
          
            });
            if(credRenov == 1){
              let aumentoCred = Number (prompt("De quanto foi o aumento?"))
              saldoCredito += aumentoCred;
              connection.query('UPDATE controledesalario SET saldoCredito = ? WHERE id = 1', [saldoCredito], (err) => {
                if (err) {
                  console.error('Erro ao atualizar o saldo no banco de dados:', err);
                } else {
                  console.log('Saldo atualizado com sucesso!');
                }
              console.log(`Seu novo saldo de crédito atual é de: ${saldoCredito}`)
              });
            } 
          });
            }else if(credRenov == 2){ 
              saldoCredito == 300;
              console.log (`Saldo renovado para: ${saldoCredito}`)
              connection.query('UPDATE controledesalario SET saldoCredito = ? WHERE id = 1', [saldoCredito], (err) => {
                if (err) {
                  console.error('Erro ao atualizar o saldo no banco de dados:', err);
                } else {
                  console.log('Saldo atualizado com sucesso!');
                }
              console.log(`Seu novo saldo de crédito atual é de: ${saldoCredito}`)
              });
            }else if(credRenov == 3){
            let descontoCred = Number (prompt("De quanto foi o desconto?"))
            saldoCredito -= aumentoCred;
            connection.query('UPDATE controledesalario SET saldoCredito = ? WHERE id = 1', [saldoCredito], (err) => {
              if (err) {
                console.error('Erro ao atualizar o saldo no banco de dados:', err);
              } else {
                console.log('Saldo atualizado com sucesso!');
              }
            console.log(`Seu novo saldo de crédito atual é de: ${saldoCredito}`)
            });
          }else if(credRenov == 4){
            console.log(`Seu saldo crédito atual é: ${saldoCredito}`)
          }

 } else if(escolhaMenuBanco == 2){

  let escolhaMenuBancoPerg = Number (prompt ("Deseja criar uma nota fiscal? (1) - sim (2) - não"))
  
  if(escolhaMenuBancoPerg == 1){
      let tamTotalNota = Number (prompt("Quantos itens com 'nomes diferentes' você comprou nessa nota? "))
      let ondeNota = prompt ('Onde fez a compra? ')
      
      for (k=0; k<tamTotalNota; k++){
        let itemNota = prompt ('Qual o nome do item? ');
        let qntdNota = Number (prompt ('Quantos? '));
        let precoNota = Number (prompt ('Qual o custo da unidade? '));
        let credDebDin = Number (prompt('Foi no (1) crédito / (2) débito / (3) dinheiro'));
          if(credDebDin == 1){
            credDebDinTxt == 'Crédito';
          }else if(credDebDin == 2){
            credDebDinTxt == 'Débito';
            saldoPosCompra = saldoAtual - preco;
            connection.query('UPDATE controledesalario SET saldoAtual = ? WHERE id = 1', [saldoAtual], (err) => {
              if (err) {
                console.error('Erro ao atualizar o saldo no banco de dados:', err);
              } else {
                console.log('Saldo atualizado com sucesso!');
              }
            });
        valorTotalNota[k]=precoNota*qntdNota;
          
          }else{ 
            credDebDinTxt == 'Dinheiro';
          }
          let sql = 'INSERT INTO protocol (nome, quantidade, preco, credDebDin, onde, obs, data_hora) VALUES (?,?, ?, ?, ?, CURRENT_TIMESTAMP)';
          let values = [item, qntd, preco, credDebDinTxt, onde, obs];
        }
      }

  }else if (escolhaMenuBancoPerg == 2){
      let item = prompt('Qual produto você comprou?');
      let qntd = prompt('Qual a quantidade?');
      let preco = prompt('Qual o valor do produto você comprou?');
      let credDebDin = Number (prompt('Foi no (1) crédito / (2) débito / (3) dinheiro'));
      let onde = prompt('Onde você comprou?');
      let obs = prompt('Obervações?');


      if(credDebDin == 1){
        credDebDinTxt == 'Crédito';


      }else if(credDebDin == 2){
        credDebDinTxt == 'Débito';
        saldoPosCompra = saldoAtual - preco;
        connection.query('UPDATE controledesalario SET saldoAtual = ? WHERE id = 1', [saldoAtual], (err) => {
          if (err) {
            console.error('Erro ao atualizar o saldo no banco de dados:', err);
          } else {
            console.log('Saldo atualizado com sucesso!');
          }
        });

      }else{ 
        credDebDinTxt == 'Dinheiro';
      }

      let sql = 'INSERT INTO protocol (nome, quantidade, preco, credDebDin, onde, obs, data_hora) VALUES (?,?, ?, ?, ?, CURRENT_TIMESTAMP)';
      let values = [item, qntd, preco, credDebDinTxt, onde, obs];
    }
     else if (escolhaMenu == 0) {
  console.log('\nAté mais viajante!');
}



/////////// TABELAS DO BANCO DE DADOS /////////////
//________________________________________________________________________________________\\
// banco de dados:
// controledegastos (database)
// controledesalario (table)


//   | saldoAtual | bigint   | YES  |     | NULL    |                | (atualizar o valor)
//   | datahora   | datetime | YES  |     | NULL    |                |
//   | id         | int      | NO   | PRI | NULL    | auto_increment |
//   | saldoCredito |int     | YES  |     | NULL    |                | (atualizar o valor)
//________________________________________________________________________________________//

//________________________________________________________________________________________\\
// controledegastos (database)
// registrodecompra (table)
//   
//  
// create table registrodecompra(
// id INT AUTO_INCREMENT PRIMARY KEY,
// nome VARCHAR(75),
// quantidade INT,
// preco BIGINT,
// onde VARCHAR(75),
// obs VARCHAR(300),
// credDebDin VARCHAR (10),
// data_hora DATETIME,
// );
//________________________________________________________________________________________//
  
//________________________________________________________________________________________//
// notasfiscais (database)
// nota (tabela)

// itemNota varchar (100)
// qntdNota int
// precoNota bigint
// ondeNota varchar (100)
// data_hora datetime
//________________________________________________________________________________________//
